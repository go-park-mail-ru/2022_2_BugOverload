// Code generated by MockGen. DO NOT EDIT.
// Source: go-park-mail-ru/2022_2_BugOverload/internal/session/service (interfaces: SessionService)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	models "go-park-mail-ru/2022_2_BugOverload/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSessionService is a mock of SessionService interface.
type MockSessionService struct {
	ctrl     *gomock.Controller
	recorder *MockSessionServiceMockRecorder
}

// MockSessionServiceMockRecorder is the mock recorder for MockSessionService.
type MockSessionServiceMockRecorder struct {
	mock *MockSessionService
}

// NewMockSessionService creates a new mock instance.
func NewMockSessionService(ctrl *gomock.Controller) *MockSessionService {
	mock := &MockSessionService{ctrl: ctrl}
	mock.recorder = &MockSessionServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionService) EXPECT() *MockSessionServiceMockRecorder {
	return m.recorder
}

// CreateSession mocks base method.
func (m *MockSessionService) CreateSession(arg0 context.Context, arg1 *models.User) (models.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSession", arg0, arg1)
	ret0, _ := ret[0].(models.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSession indicates an expected call of CreateSession.
func (mr *MockSessionServiceMockRecorder) CreateSession(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSession", reflect.TypeOf((*MockSessionService)(nil).CreateSession), arg0, arg1)
}

// DeleteSession mocks base method.
func (m *MockSessionService) DeleteSession(arg0 context.Context, arg1 models.Session) (models.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSession", arg0, arg1)
	ret0, _ := ret[0].(models.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteSession indicates an expected call of DeleteSession.
func (mr *MockSessionServiceMockRecorder) DeleteSession(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSession", reflect.TypeOf((*MockSessionService)(nil).DeleteSession), arg0, arg1)
}

// GetUserBySession mocks base method.
func (m *MockSessionService) GetUserBySession(arg0 context.Context, arg1 models.Session) (models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserBySession", arg0, arg1)
	ret0, _ := ret[0].(models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserBySession indicates an expected call of GetUserBySession.
func (mr *MockSessionServiceMockRecorder) GetUserBySession(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserBySession", reflect.TypeOf((*MockSessionService)(nil).GetUserBySession), arg0, arg1)
}
