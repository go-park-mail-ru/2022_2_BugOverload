// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package models

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson76a3d266DecodeGoParkMailRu20222BugOverloadInternalApiDeliveryHttpModels(in *jlexer.Lexer, out *GetUserSettingsResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "count_views_films":
			out.CountViewsFilms = int(in.Int())
		case "count_collections":
			out.CountCollections = int(in.Int())
		case "count_reviews":
			out.CountReviews = int(in.Int())
		case "count_ratings":
			out.CountRatings = int(in.Int())
		case "joined_date":
			out.JoinedDate = string(in.String())
		default:
			in.AddError(&jlexer.LexerError{
				Offset: in.GetPos(),
				Reason: "unknown field",
				Data:   key,
			})
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson76a3d266EncodeGoParkMailRu20222BugOverloadInternalApiDeliveryHttpModels(out *jwriter.Writer, in GetUserSettingsResponse) {
	out.RawByte('{')
	first := true
	_ = first
	if in.CountViewsFilms != 0 {
		const prefix string = ",\"count_views_films\":"
		first = false
		out.RawString(prefix[1:])
		out.Int(int(in.CountViewsFilms))
	}
	if in.CountCollections != 0 {
		const prefix string = ",\"count_collections\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int(int(in.CountCollections))
	}
	if in.CountReviews != 0 {
		const prefix string = ",\"count_reviews\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int(int(in.CountReviews))
	}
	if in.CountRatings != 0 {
		const prefix string = ",\"count_ratings\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int(int(in.CountRatings))
	}
	if in.JoinedDate != "" {
		const prefix string = ",\"joined_date\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.JoinedDate))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetUserSettingsResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson76a3d266EncodeGoParkMailRu20222BugOverloadInternalApiDeliveryHttpModels(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetUserSettingsResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson76a3d266EncodeGoParkMailRu20222BugOverloadInternalApiDeliveryHttpModels(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetUserSettingsResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson76a3d266DecodeGoParkMailRu20222BugOverloadInternalApiDeliveryHttpModels(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetUserSettingsResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson76a3d266DecodeGoParkMailRu20222BugOverloadInternalApiDeliveryHttpModels(l, v)
}
