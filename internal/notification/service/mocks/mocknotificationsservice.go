// Code generated by MockGen. DO NOT EDIT.
// Source: notificationsservice.go

// Package mockNotificationsService is a generated GoMock package.
package mockNotificationsService

import (
	models "go-park-mail-ru/2022_2_BugOverload/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNotificationsService is a mock of NotificationsService interface.
type MockNotificationsService struct {
	ctrl     *gomock.Controller
	recorder *MockNotificationsServiceMockRecorder
}

// MockNotificationsServiceMockRecorder is the mock recorder for MockNotificationsService.
type MockNotificationsServiceMockRecorder struct {
	mock *MockNotificationsService
}

// NewMockNotificationsService creates a new mock instance.
func NewMockNotificationsService(ctrl *gomock.Controller) *MockNotificationsService {
	mock := &MockNotificationsService{ctrl: ctrl}
	mock.recorder = &MockNotificationsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNotificationsService) EXPECT() *MockNotificationsServiceMockRecorder {
	return m.recorder
}

// CheckNotificationSent mocks base method.
func (m *MockNotificationsService) CheckNotificationSent(user *models.User) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckNotificationSent", user)
	ret0, _ := ret[0].(bool)
	return ret0
}

// CheckNotificationSent indicates an expected call of CheckNotificationSent.
func (mr *MockNotificationsServiceMockRecorder) CheckNotificationSent(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckNotificationSent", reflect.TypeOf((*MockNotificationsService)(nil).CheckNotificationSent), user)
}

// GetMessages mocks base method.
func (m *MockNotificationsService) GetMessages(user *models.User) []interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessages", user)
	ret0, _ := ret[0].([]interface{})
	return ret0
}

// GetMessages indicates an expected call of GetMessages.
func (mr *MockNotificationsServiceMockRecorder) GetMessages(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessages", reflect.TypeOf((*MockNotificationsService)(nil).GetMessages), user)
}
