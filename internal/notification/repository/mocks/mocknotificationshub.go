// Code generated by MockGen. DO NOT EDIT.
// Source: notificationcache.go

// Package mockNotificationsRepository is a generated GoMock package.
package mockNotificationsRepository

import (
	models "go-park-mail-ru/2022_2_BugOverload/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNotificationHub is a mock of NotificationHub interface.
type MockNotificationHub struct {
	ctrl     *gomock.Controller
	recorder *MockNotificationHubMockRecorder
}

// MockNotificationHubMockRecorder is the mock recorder for MockNotificationHub.
type MockNotificationHubMockRecorder struct {
	mock *MockNotificationHub
}

// NewMockNotificationHub creates a new mock instance.
func NewMockNotificationHub(ctrl *gomock.Controller) *MockNotificationHub {
	mock := &MockNotificationHub{ctrl: ctrl}
	mock.recorder = &MockNotificationHubMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNotificationHub) EXPECT() *MockNotificationHubMockRecorder {
	return m.recorder
}

// CheckNotificationSent mocks base method.
func (m *MockNotificationHub) CheckNotificationSent(user *models.User) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckNotificationSent", user)
	ret0, _ := ret[0].(bool)
	return ret0
}

// CheckNotificationSent indicates an expected call of CheckNotificationSent.
func (mr *MockNotificationHubMockRecorder) CheckNotificationSent(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckNotificationSent", reflect.TypeOf((*MockNotificationHub)(nil).CheckNotificationSent), user)
}

// GetNotifications mocks base method.
func (m *MockNotificationHub) GetNotifications(user *models.User) []interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNotifications", user)
	ret0, _ := ret[0].([]interface{})
	return ret0
}

// GetNotifications indicates an expected call of GetNotifications.
func (mr *MockNotificationHubMockRecorder) GetNotifications(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNotifications", reflect.TypeOf((*MockNotificationHub)(nil).GetNotifications), user)
}

// UpdateHub mocks base method.
func (m *MockNotificationHub) UpdateHub(arg0 []interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateHub", arg0)
}

// UpdateHub indicates an expected call of UpdateHub.
func (mr *MockNotificationHubMockRecorder) UpdateHub(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateHub", reflect.TypeOf((*MockNotificationHub)(nil).UpdateHub), arg0)
}
